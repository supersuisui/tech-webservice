
package com.sumingjie.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PictureWebService", targetNamespace = "http://service.sumingjie.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PictureWebService {


    /**
     * 
     * @return
     *     returns java.util.List<com.sumingjie.client.Picture>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllPictures", targetNamespace = "http://service.sumingjie.com/", className = "com.sumingjie.client.GetAllPictures")
    @ResponseWrapper(localName = "getAllPicturesResponse", targetNamespace = "http://service.sumingjie.com/", className = "com.sumingjie.client.GetAllPicturesResponse")
    public List<Picture> getAllPictures();

    /**
     * 
     * @param material
     * @param year
     * @param author
     * @param name
     * @param width
     * @param height
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createPicture", targetNamespace = "http://service.sumingjie.com/", className = "com.sumingjie.client.CreatePicture")
    @ResponseWrapper(localName = "createPictureResponse", targetNamespace = "http://service.sumingjie.com/", className = "com.sumingjie.client.CreatePictureResponse")
    public int createPicture(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "author", targetNamespace = "")
        String author,
        @WebParam(name = "year", targetNamespace = "")
        int year,
        @WebParam(name = "material", targetNamespace = "")
        String material,
        @WebParam(name = "height", targetNamespace = "")
        float height,
        @WebParam(name = "width", targetNamespace = "")
        float width);

    /**
     * 
     * @param q
     * @param id
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updatePicture", targetNamespace = "http://service.sumingjie.com/", className = "com.sumingjie.client.UpdatePicture")
    @ResponseWrapper(localName = "updatePictureResponse", targetNamespace = "http://service.sumingjie.com/", className = "com.sumingjie.client.UpdatePictureResponse")
    public int updatePicture(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "q", targetNamespace = "")
        MyRequest q);

    /**
     * 
     * @param id
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletePicture", targetNamespace = "http://service.sumingjie.com/", className = "com.sumingjie.client.DeletePicture")
    @ResponseWrapper(localName = "deletePictureResponse", targetNamespace = "http://service.sumingjie.com/", className = "com.sumingjie.client.DeletePictureResponse")
    public int deletePicture(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param q
     * @return
     *     returns java.util.List<com.sumingjie.client.Picture>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findPictures", targetNamespace = "http://service.sumingjie.com/", className = "com.sumingjie.client.FindPictures")
    @ResponseWrapper(localName = "findPicturesResponse", targetNamespace = "http://service.sumingjie.com/", className = "com.sumingjie.client.FindPicturesResponse")
    public List<Picture> findPictures(
        @WebParam(name = "q", targetNamespace = "")
        MyRequest q);

}
